@page "/management/account"
@attribute [Authorize]
@inject IManagementAccountService _svc
@inject IServiceBase _svcBa
@inject ISweetAlertService swal
@inject ITextTranslator Text
@inject NavigationManager NavigationManager
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.SplitButtons
@using Syncfusion.Blazor.Inputs

<SfDialog Target="#target" class="dialog-change-password" IsModal="true" ShowCloseIcon="true" @bind-Visible="_modalPwdChangeVisible">
    <DialogTemplates>
        <Header><span class="title">Đổi mật khẩu</span></Header>
        <Content>
            <EditForm id="changePwForm" Model="@_modelPwdChange" OnValidSubmit="@OnFormPwdChangeSubmit">
                <DataAnnotationsValidator />
                <div class="form-group row mb-0">
                    <label class="col-md-12 col-form-label">Tên đăng nhập</label>
                    <div class="col-md-12">
                        <SfTextBox Readonly="true" @bind-Value="_modelPwdChange.UserName"></SfTextBox>
                        <CustomValidationMessage For="@(() => _modelPwdChange.UserName)" />
                    </div>
                </div>
                <div class="form-group row mb-0">
                    <label class="col-md-12 col-form-label">Mật khẩu</label>
                    <div class="col-md-12">
                        <SfTextBox Type="@Syncfusion.Blazor.Inputs.InputType.Password" @bind-Value="_modelPwdChange.Password"></SfTextBox>
                        <CustomValidationMessage For="@(() => _modelPwdChange.Password)" />
                    </div>
                </div>
                <div class="form-group row  mb-0">
                    <label class="col-md-12 col-form-label">Xác nhận mật khẩu</label>
                    <div class="col-md-12">
                        <SfTextBox Type="@Syncfusion.Blazor.Inputs.InputType.Password" @bind-Value="_modelPwdChange.PasswordConfirm"></SfTextBox>
                        <CustomValidationMessage For="@(() => _modelPwdChange.PasswordConfirm)" />
                    </div>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>
    <DialogEvents Closed="@(() => { _modelPwdChange = new(); })"></DialogEvents>
    <DialogButtons>
        <DialogButton form=changePwForm class="btn-submit" Type="Syncfusion.Blazor.Popups.ButtonType.Submit" IsPrimary="false" Content="Xác nhận"></DialogButton>
    </DialogButtons>
</SfDialog>

<SfDialog Target="#target" class="dialog-create-user" IsModal="true" ShowCloseIcon="true" @bind-Visible="_modalEditVisible">
    <DialogTemplates>
        <Header><span class="title">@_modalEditTitle</span></Header>
        <Content>
            <EditForm id="editForm" Model="@_modelEdit" OnValidSubmit="@OnFormEditSubmit">
                <DataAnnotationsValidator />
                <div class="form-group row mb-0">
                    <div class="col-md-6">
                        <label class="col-form-label">Họ đệm</label>
                        <SfTextBox Enabled="false" @bind-Value="_modelEdit.LastName" />
                        <CustomValidationMessage For="@(() => _modelEdit.LastName)" />
                    </div>
                    <div class="col-md-6">
                        <label class="col-form-label">Tên</label>
                        <SfTextBox Enabled="false" @bind-Value="_modelEdit.FirstName" />
                        <CustomValidationMessage For="@(() => _modelEdit.FirstName)" />
                    </div>
                </div>
                <div class="form-group row mb-0">
                    <div class="col-md-6">
                        <label class="col-form-label">Số điện thoại</label>
                        <SfTextBox Enabled=false @bind-Value="_modelEdit.Phone" />
                        <CustomValidationMessage style="color: red;" For="@(() => _modelEdit.Phone)" />
                    </div>
                    <div class="col-md-6">
                        <label class="col-form-label">Email</label>
                        <SfTextBox Enabled=false @bind-Value="_modelEdit.Email" />
                        <CustomValidationMessage For="@(() => _modelEdit.Email)" />
                    </div>
                </div>
                <div class="form-group row mb-0">
                    <label class="col-md-12 col-form-label">Tên đăng nhập</label>
                    <div class="col-md-12">
                        <SfTextBox @bind-Value="_modelEdit.UserName" />
                        <CustomValidationMessage For="@(() => _modelEdit.UserName)" />
                    </div>
                </div>
                <div class="form-group row mb-0">
                    <label class="col-md-12 col-form-label">Mật khẩu</label>
                    <div class="col-md-12">
                        <SfTextBox @bind-Value="_modelEdit.Password"></SfTextBox>
                        <CustomValidationMessage For="@(() => _modelEdit.Password)" />
                    </div>
                </div>
                <div class="form-group row mb-0">
                    <label class="col-md-12 col-form-label">Nhóm phân quyền</label>
                    <div class="col-md-12">
                        <SfDropDownList TItem="OptionItem<Guid>" TValue="Guid" PopupHeight="230px" @bind-Value="@_modelEdit.GuidPrimissions"
                                        DataSource="@_optRoles" Placeholder="Chọn nhóm phân quyền">
                            <DropDownListEvents TItem="OptionItem<Guid>" TValue="Guid" />
                            <DropDownListFieldSettings Text="Text" Value="Value" />
                        </SfDropDownList>
                        <CustomValidationMessage For="@(() => _modelEdit.GuidPrimissions)" />
                    </div>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>
    <DialogEvents Closed="@(() => { _modelEdit = new(); })"></DialogEvents>
     <DialogButtons>
        <DialogButton form=editForm class="btn-submit" Type="Syncfusion.Blazor.Popups.ButtonType.Submit" IsPrimary="false" Content="Xác nhận"></DialogButton>
    </DialogButtons>
</SfDialog>

@if (_checkPermissionAdmin)
{
    <div class="app-content-wrapper">
        <div class="app-content-head" style="height: auto">
            <div class="row" style="padding: 0 0 0 5px">
                <div class="col-12">
                    <ol class="breadcrumb">
                        <li>Quản trị</li>
                        <li style="color: #777">&nbsp; / &nbsp;</li>
                        <li class="active text-primary">Tài khoản</li>
                    </ol>
                </div>
                <div class="col-12 col-md-4">
                    <div class="input-group">
                        <input type="text" class="form-control" style="height: 31px;"
                               placeholder="Tìm kiếm..." @bind="_fillterSearch" @bind:event="oninput"
                               @onkeyup="OnSearchChanged" />
                        <div class="input-group-append">
                            <span class="input-group-text bg-white" style="height: 31px;" id="basic-addon2"><i class="fas fa-search"></i></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="app-content-body" style="overflow:auto" id="target">
            <div class="container-fluid" style="overflow:auto">
                <SfGrid DataSource="@_displaySource" AllowResizing="true" AllowPaging="true"
                        AllowFiltering="false" EnableVirtualization="true" EnableHover="true"
                        Height="100%" RowHeight="38">
                    <GridPageSettings PageSize="200"></GridPageSettings>
                    <GridColumns>
                        <GridColumn HeaderText="Họ và tên" Width="200">
                            <Template>
                                @{
                                    var account = (context as ModelEmployeeAccount);
                                    <a class="fullname" href="/employee/profile/@account.GuidEmployee">
                                        @account.FullName
                                    </a>
                                }
                            </Template>
                        </GridColumn>
                        <GridColumn Field=@nameof(ModelEmployeeAccount.JobName) HeaderText="Vị trí công việc" Width="150">
                            <Template>
                                @{
                                    var item = (context as ModelEmployeeAccount);
                                    <div>@item.JobName</div>
                                }
                            </Template>
                        </GridColumn>
                        <GridColumn Field=@nameof(ModelEmployeeAccount.Email) HeaderText="Email" Width="250">
                        </GridColumn>
                        <GridColumn Field=@nameof(ModelEmployeeAccount.Phone) HeaderText="Số điện thoại"
                                    Width="150"></GridColumn>
                        <GridColumn Field=@nameof(ModelEmployeeAccount.UserName)
                                    HeaderText="Tên đăng nhập" Width="150">
                        </GridColumn>
                        <GridColumn Field=@nameof(ModelEmployeeAccount.Locked) HeaderText="Tình trạng" TextAlign=TextAlign.Center
                                    Width="150">
                            <Template>
                                @{
                                    var user = (context as ModelEmployeeAccount);
                                    if (user.Locked == null)
                                    {
                                        <div class="text-warning">Chưa đăng ký</div>
                                    }
                                    else if (user.Locked == true)
                                    {
                                        <div class="text-success">Đang hoạt động</div>
                                    }
                                    else
                                    {
                                        <div class="text-danger">Đã bị khóa</div>
                                    }
                                }
                            </Template>
                        </GridColumn>
                        <GridColumn HeaderText="Chức năng" Width="90">
                            <Template>
                                @{
                                    var user = (context as ModelEmployeeAccount);
                                }
                                <SfDropDownButton CssClass="e-caret-hide float-right" style="padding-left: 13px;"
                                                  IconCss="fas fa-ellipsis-v">
                                    <DropDownMenuItems>
                                        <DropDownButtonEvents ItemSelected="UserSelected"></DropDownButtonEvents>
                                        @if (user.UserName == "-")
                                        {
                                            <DropDownMenuItem Id="@(user.GuidEmployee.ToString())" Text="Tạo tài khoản"></DropDownMenuItem>
                                        }
                                        else
                                        {
                                            <DropDownMenuItem Id="@(user.GuidEmployee.ToString())" Text="Đổi mật khẩu"></DropDownMenuItem>
                                        }
                                    </DropDownMenuItems>
                                </SfDropDownButton>
                            </Template>
                        </GridColumn>
                    </GridColumns>
                </SfGrid>
            </div>
        </div>
    </div>
}
else
{
    <div class="app-content-wrapper wrapper-centered" style="height: calc(100vh - calc(100vh - 100%) - 66px)">
        <div class="app-loading centered text-center">
            <svg id="Capa_1" enable-background="new 0 0 512 512" height="100" viewBox="0 0 512 512" width="100" xmlns="http://www.w3.org/2000/svg"><g><path d="m507.606 145.568-141.174-141.174c-2.813-2.813-6.628-4.394-10.606-4.394h-199.652c-3.978 0-7.793 1.581-10.606 4.394l-141.174 141.174c-2.813 2.813-4.394 6.628-4.394 10.606v199.651c0 3.978 1.581 7.793 4.394 10.606l141.174 141.174c2.813 2.813 6.628 4.394 10.606 4.394h199.651c3.978 0 7.793-1.581 10.606-4.394l141.174-141.174c2.813-2.813 4.394-6.628 4.394-10.606v-199.651c.001-3.978-1.58-7.793-4.393-10.606z" fill="#f25a3c" /><path d="m512 156.17v199.66c0 3.97-1.58 7.79-4.39 10.6l-141.18 141.18c-2.81 2.81-6.63 4.39-10.6 4.39h-99.83v-512h99.83c3.97 0 7.79 1.58 10.6 4.39l141.18 141.18c2.81 2.81 4.39 6.63 4.39 10.6z" fill="#e43539" /><path d="m237.171 106h37.658c8.728 0 15.613 7.422 14.958 16.126l-12.793 170c-.589 7.826-7.11 13.874-14.958 13.874h-12.073c-7.848 0-14.369-6.049-14.958-13.874l-12.792-170c-.654-8.704 6.23-16.126 14.958-16.126z" fill="#e9f3fb" /><path d="m289.79 122.13-12.8 170c-.58 7.82-7.11 13.87-14.95 13.87h-6.04v-200h18.83c8.73 0 15.61 7.42 14.96 16.13z" fill="#d6e9f8" /><path d="m226.05 375.95v.1c0 16.541 13.409 29.95 29.95 29.95 16.541 0 29.95-13.409 29.95-29.95v-.1c0-16.541-13.409-29.95-29.95-29.95-16.541 0-29.95 13.409-29.95 29.95z" fill="#e9f3fb" /><path d="m285.95 375.95v.1c0 8.27-3.35 15.76-8.77 21.18s-12.91 8.77-21.18 8.77v-60c16.54 0 29.95 13.41 29.95 29.95z" fill="#d6e9f8" /></g></svg>
            <div class="app-loading-caption mt-2">Lỗi 403!</div>
            <div class="app-loading-sm-text mt-2">Bạn không có quyền truy cập!</div>
        </div>
    </div>
}

@code {
    #region variables
    [Inject] NavigationManager _navManager { get; set; }
    private IEnumerable<ModelEmployeeAccount> _dataSource = new List<ModelEmployeeAccount>();
    private ModelUserAccount _modelEdit = new();
    private ModelPasswordChange _modelPwdChange = new();
    private List<ModelEmployeeAccount> _displaySource = new();
    private List<OptionItem<Guid>> _optRoles = new();
    private bool _modalEditVisible = false;
    private bool _modalPwdChangeVisible = false;
    private bool _checkPermissionAdmin;
    private string _fillterSearch = string.Empty;
    private string _modalEditTitle = string.Empty;
    #endregion

    #region events
    protected override async Task OnInitializedAsync()
    {
        _ = swal.Loading("Nạp thông tin ..");

        _checkPermissionAdmin = await _svc.CheckPermissionAdmin();

        await (_checkPermissionAdmin ? ResetData() : swal.Close());

    }
    #endregion

    #region methods
    private async Task ResetData()
    {
        var rsp = await AppStatic.CallApi(() => _svc.GetListEmployeeAccount());
        if (!rsp.Success)
        {
            _ = swal.Error(rsp.Message);
            return;
        }

        _dataSource = rsp.Items;
        _displaySource = _dataSource.ToList();

        var rsp2 = await AppStatic.CallApi(() => _svc.GetListRoles());
        if (!rsp2.Success)
        {
            _ = swal.Error(rsp2.Message);
            return;
        }

        _optRoles = rsp2.Items.ToList();

        _ = swal.Close();
        StateHasChanged();
    }

    private async void OnFormEditSubmit()
    {
        _modalEditVisible = false;

        _ = swal.Loading("Đang tạo tài khoản ..");

        string BaseUri = NavigationManager.BaseUri.ToString();

        var rsp = await AppStatic.CallApi(() => _svc.CreateUser(_modelEdit, BaseUri));
        if (!rsp.Success)
        {
            _ = swal.Error(rsp.Message);
            return;
        }

        await ResetData();

        _ = swal.Alert(Text["Saved!", "Tài khoản đã được tạo!"]);
    }

    private async void OnFormPwdChangeSubmit()
    {
        _ = swal.Loading("Lưu thông tin");
        var rsp = await AppStatic.CallApi(() => _svc.ChangePassword(_modelPwdChange));
        if (!rsp.Success)
        {
            _ = swal.Error(rsp.Message);
            return;
        }

        _modalPwdChangeVisible = false;

        await ResetData();
    }

    private void UserSelected(MenuEventArgs e)
    {
        string text = e.Item.Text;
        if (text == Text["Create account", "Tạo tài khoản"])
        {
            var guid = Guid.Parse(e.Item.Id);
            var item = _dataSource.SingleOrDefault(n => n.GuidEmployee == guid);
            item.TransferTo(_modelEdit);
            _modelEdit.Phone = item.Phone;
            _modelEdit.Password = RandomPassword.GeneratePassword();
            _modalEditTitle = Text["Create account", "Tạo tài khoản"];
            _modalEditVisible = true;
        }
        else if (text == Text["Change password", "Đổi mật khẩu"])
        {
            var guid = Guid.Parse(e.Item.Id);
            var item = _dataSource.SingleOrDefault(n => n.GuidEmployee == guid);
            _modelPwdChange.UserName = item.UserName;
            _modalPwdChangeVisible = true;
        }
    }

    private void OnSearchChanged()
    {
        var query = _dataSource.AsQueryable();

        if (!string.IsNullOrEmpty(_fillterSearch))
            query = query.Where(x => (x.FullName).ToLower().Contains(_fillterSearch.ToLower()));

        _displaySource = query.ToList();
    }
    #endregion
}