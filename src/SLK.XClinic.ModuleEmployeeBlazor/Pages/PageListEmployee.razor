@page "/employee/list"
@attribute [Authorize]
@inject IEmployeeService _svc
@inject ISweetAlertService swal
@inject ITextTranslator Text
@inject FieldExtractor<EntityEmployee> field
@inject Microsoft.JSInterop.IJSRuntime jSRuntime
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Inputs
@using System.Linq
@using Syncfusion.Blazor.SplitButtons
@using Syncfusion.Blazor.DropDowns
@using System.Data
@using Syncfusion.XlsIO
@using System.IO
@using Syncfusion.Blazor.Calendars

<SfDialog Target="#target" class="dialog-create-employee" IsModal="true" ShowCloseIcon="true" @bind-Visible="_modalVisible">
    <DialogTemplates>
        <Header><span class="title">@_modalTitle</span></Header>
        <Content>
            <EditForm id="editForm" Model="@_model" OnValidSubmit="@OnFormSubmit">
                <DataAnnotationsValidator />
                <div class="form-group row">
                    <div class="col-md-6 mt-3 mt-xl-0 mt-md-0">
                        <div class="row">
                            <label for="name" class="col-md-12 col-form-label">Họ đệm</label>
                            <div class="col-md-12">
                                <SfTextBox Placeholder="Họ đệm" @bind-Value="_model.LastName" />
                                <CustomValidationMessage style="color: red;" For="@(() => _model.LastName)" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <label for="name" class="col-md-12 col-form-label">Tên</label>
                            <div class="col-md-12">
                                <SfTextBox Placeholder="Tên" @bind-Value="_model.FirstName" />
                                <CustomValidationMessage style="color: red;" For="@(() => _model.FirstName)" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-6">
                        <div class="row">
                            <label for="name" class="col-md-12 col-form-label">Email</label>
                            <div class="col-md-12">
                                <SfTextBox @bind-Value="_model.Email" />
                                <CustomValidationMessage style="color: red;" For="@(() => _model.Email)" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 mt-0 mt-xl-0">
                        <div class="row">
                            <label for="name" class="col-md-12 col-form-label">Điện thoại</label>
                            <div class="col-md-12">
                                <SfTextBox Placeholder="Điện thoại" @bind-Value="_model.Phone" />
                                <CustomValidationMessage style="color: red;" For="@(() => _model.Phone)" />
                            </div>
                        </div>
                    </div>                    
                </div>
                <div class="form-group row">
                    <div class="col-md-6 mt-0 mt-xl-0 mt-md-0">
                        <label for="name" class="col-md-12 col-form-label pl-0">Chi nhánh</label>
                        <div class="position-relative phone-group">
                            <SfDropDownList TItem="OptionItem<Guid>" TValue="Guid" PopupHeight="230px"
                                            DataSource="@_optOffices" Placeholder="Chọn chi nhánh" @bind-Value="_model.OfficeGuid">
                                <DropDownListEvents TItem="OptionItem<Guid>" TValue="Guid"/>
                                <DropDownListFieldSettings Text="Text" Value="Value" />
                            </SfDropDownList>
                            <CustomValidationMessage style="color: red;" For="@(() => _model.OfficeGuid)" />
                        </div>
                    </div>
                    <div class="col-md-3 mt-0 mt-xl-0">
                        <div class="row">
                            <label for="name" class="col-md-12 col-form-label">Vị trí công việc</label>
                            <div class="col-md-12">
                                <SfDropDownList TItem="OptionItem<Guid>" TValue="Guid" PopupHeight="230px"
                                DataSource="_optJob" Placeholder="Chọn vị trí công việc" @bind-Value="_model.JobGuid">
                                    <DropDownListEvents TItem="OptionItem<Guid>" TValue="Guid"/>
                                    <DropDownListFieldSettings Text="Text" Value="Value" />
                                </SfDropDownList>
                                <CustomValidationMessage style="color: red;" For="@(() => _model.JobGuid)" />
                            </div>
                        </div>
                    </div>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>
    <DialogEvents Closed="@OnModalClosed"></DialogEvents>
    <DialogButtons>
        <DialogButton form=editForm class="btn-submit" Type="Syncfusion.Blazor.Popups.ButtonType.Submit" IsPrimary="false" Content="Xác nhận"></DialogButton>
    </DialogButtons>
</SfDialog>

<div class="app-content-wrapper">
    @if (active)
    {
        <div class="app-content-head" style="height: auto">
            <div class="row" style="padding: 0 0 0 5px">
                <div class="col-12">
                    <ol class="breadcrumb">
                        <li>Nhân sự</li>
                        <li style="color: #777">&nbsp; / &nbsp;</li>
                        <li class="active text-primary"> Danh sách</li>
                    </ol>
                </div>
                <div class="col-md-4 col-lg-3 d-none d-md-block">
                    <div class="input-group">
                        <input type="text" class="form-control" style="height: 31px;" placeholder="@Text["Search...", "Tìm kiếm..."]" @bind="_filterSearch" @bind:event="oninput" @onkeyup="OnChange" />
                        <div class="input-group-append">
                            <span class="input-group-text bg-white" style="height: 31px;" id="basic-addon2"><i class="fas fa-search"></i></span>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-md-8 col-lg-9 text-right">
                    <div class="btn-group pr-0">
                        <button class="btn btn-light float-right newplus mr-2" @onclick="NewEmployee_Click"><span class="fas fa-plus"></span> @Text["Employee","Nhân sự"]</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="app-content-body" style="overflow:auto" id="target">
            <div class="container-fluid" style="overflow:auto">
                <SfGrid AllowTextWrap="true" ID="Grid" @ref="_grid" EnableHover="true" AllowResizing="true" DataSource="@_displaySource" AllowPaging="true" AllowFiltering="true" AllowSorting="true"
                EnableAdaptiveUI="false" AllowExcelExport="true" AllowPdfExport="true" ShowColumnChooser="true" EnableVirtualization="false" Height="100%">
                    <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>                
                    <GridTextWrapSettings WrapMode="WrapMode.Content"></GridTextWrapSettings>
                    <GridPageSettings PageSize="50"></GridPageSettings>
                    <GridColumns>
                        <GridColumn Field=@nameof(EntityEmployee.FullName) HeaderText="@Text[field[nameof(EntityEmployee.FullName)]]" Width="160">
                            <Template>
                                @{
                                    var item = (context as EntityEmployee);
                                    <a href="/employee/profile/@item.Guid" class="fullname">
                                        @item.FullName
                                    </a>
                                }
                            </Template>
                        </GridColumn>
                        <GridColumn Field=@nameof(EntityEmployee.Phone) HeaderText="@Text[field[nameof(EntityEmployee.Phone)]]" Width="160"></GridColumn>
                        <GridColumn Field=@nameof(EntityEmployee.Email) HeaderText="@Text[field[nameof(EntityEmployee.Email)]]" Width="160"></GridColumn>
                        <GridColumn Field=@nameof(EntityEmployee.JobName) HeaderText="@Text[field[nameof(EntityEmployee.JobName)]]" Width="160"></GridColumn>
                        <GridColumn Field=@nameof(EntityEmployee.OfficeName) HeaderText="@Text[field[nameof(EntityEmployee.OfficeName)]]" Width="200"></GridColumn>
                        <GridColumn HeaderText="@Text["Functions","Chức năng"]" Width="110" TextAlign="TextAlign.Right">
                            <Template>
                                @{
                                    var item = (context as EntityEmployee);
                                    <SfDropDownButton CssClass="e-caret-hide float-right" style="padding-left: 13px;" IconCss="fas fa-ellipsis-v">
                                        <DropDownMenuItems>
                                            <DropDownButtonEvents ItemSelected="SelectedTask"></DropDownButtonEvents>
                                            <DropDownMenuItem Id="@(item.Id.ToString())" Text="Sửa"></DropDownMenuItem>
                                        </DropDownMenuItems>
                                    </SfDropDownButton>
                                }
                            </Template>
                        </GridColumn>
                    </GridColumns>
                </SfGrid>
            </div>
        </div>
    }
</div>

@code {
    #region vavariables
    [Parameter]
    public string str { get; set; }
    private SfGrid<EntityEmployee> _grid;
    private IEnumerable<EntityEmployee> _dataSource = new List<EntityEmployee>();
    private List<EntityEmployee> _displaySource = new();
    private List<OptionItem<Guid>> _optOffices = new();
    private List<OptionItem<Guid>> _optJob = new();

    private EntityEmployee _model = new();
    private bool active = false;
    private bool _modalVisible = false;
    private bool _filter = false;
    private string _modalTitle;
    private string _filterSearch;
    #endregion

    #region events
    protected override async Task OnInitializedAsync()
    {
        _ = swal.Loading("Nạp thông tin ..");

        _optOffices = await _svc.GetOptionOffices();
        _optJob = await _svc.GetOptionJob();

        await RereshData();
        StateHasChanged();
    }

    private void NewEmployee_Click()
    {
        _modalTitle = "Thêm nhân sự mới";
        _modalVisible = true;
    }

    private void OnModalClosed(Object args)
    {
        _model = new EntityEmployee();
    }
    #endregion

    #region methods
    private async Task RereshData()
    {
        var rsp = await AppStatic.CallApi(() => _svc.GetList());
        if (!rsp.Success)
        {
            _ = swal.Error(rsp.Message);
            return;
        }

        active = true;
        _dataSource = rsp.Items;

        _displaySource = _dataSource.OrderByDescending(x => x.Id).ToList();

        await swal.Close();
        StateHasChanged();
    }

    private async void OnFormSubmit()
    {
        _modalVisible = false;
        _ = swal.Loading("Lưu thông tin..");

        _model.OfficeName = _optOffices.SingleOrDefault(x => x.Value == _model.OfficeGuid).Text;
        _model.JobName = _optJob.SingleOrDefault(x => x.Value == _model.JobGuid).Text;
        _model.Active = true;
            
        var rsp = await AppStatic.CallApi(() => _svc.Save(_model));
        if (!rsp.Success)
        {
            _ = swal.Error(rsp.Message);
            return;
        }
        await RereshData();
    }

    private void OnChange()
    {
        var query = _dataSource.AsQueryable();

        if (!string.IsNullOrWhiteSpace(_filterSearch))
            query = query.Where(w => w.LastName.ToLower().Contains(_filterSearch.ToLower()) || w.FirstName.ToLower().Contains(_filterSearch.ToLower()));

        _displaySource = query.OrderByDescending(o => o.Id).ToList();
        StateHasChanged();
    }

    private async void Modify(int id)
    {
        var item = _dataSource.Single(t => t.Id == id);
        _model = item;

        _modalTitle = "Hiệu chỉnh nhân sự";
        _modalVisible = true;

        await Task.CompletedTask;
    }

    private void SelectedTask(MenuEventArgs e)
    {
        string text = e.Item.Text.ToLower();
        int id = Convert.ToInt32(e.Item.Id);
        if (text == "sửa")
            Modify(id);
    }
    #endregion
}